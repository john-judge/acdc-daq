FLAGS := -O2 -g -fPIC
CC := g++ $(FLAGS)

INC := -I ./include/

LIB := -lusb -lz -lm

EXE := logData \
	takePed \
	setPed \
	ledEn \
	setupLVDS \
	readCC \
	readACDC \
	Reset \
	calEn \
	resetDll \
	setConfig \
	dumpData \
	oScope \
	usbResetDevice \
	makeLUT

TESTS := test_logData

SRCDIR := src
BUILDDIR := build
BINDIR := bin
TESTDIR := tests

SOURCES := $(shell find $(SRCDIR) -type f -name *.cpp)
OBJS := $(patsubst $(SRCDIR)/%.cpp, $(BUILDDIR)/%.o, $(SOURCES))


#############################################################

all: setup $(EXE)

setup:
	mkdir -p $(BINDIR)
	mkdir -p $(BUILDDIR)
	mkdir -p $(BUILDDIR)/functions
	mkdir -p $(BUILDDIR)/tests
	mkdir -p $(BUILDDIR)/calibration
	mkdir -p $(BUILDDIR)/usb

$(EXE): $(OBJS)
	$(CC) $(INC) -o $(BINDIR)/$@ $^ $(LIB)

$(TESTS): $(OBJS)
	mkdir -p $(TESTDIR)
	mkdir -p $(TESTDIR)/data
	$(CC) -o $(TESTDIR)/$@ $^ $(LIB)

$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(INC) -o $@ -c $< $(LIB)


#############################################################
clean:
	rm -rf $(BINDIR) $(TESTDIR) $(BUILDDIR)

.PHONY: clean
